# NOT WORKING YET
# source /home/ghaerinck/git/emsdk/emsdk_env.sh
# em++ src/main.cpp -s USE_SDL=2 -s USE_WEBGL2=1 -o dist/index.html
# emrun --port 8080 dist/index.html

# /////////////////////////////////////////////////////////////////////////////
# ///////////////////////////////// SETTINGS //////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

cmake_minimum_required(VERSION 2.8)
set(CMAKE_CXX_STANDARD 14)

# Build Options
set(BUILD_AS_WASM false CACHE BOOL "Should built as web assembly ?")
if (BUILD_AS_WASM)
    set(EMSCRIPTEN "" CACHE FILEPATH "Filepath for emscripten compiler")
    # set(CMAKE_C_COMPILER EMSCRIPTEN)
    # set(CMAKE_CPP_COMPILER EMSCRIPTEN)
endif()

# /////////////////////////////////////////////////////////////////////////////
# ////////////////////////////// PROJECT FILES ////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

project(roll-goal)
file(GLOB_RECURSE MY_SOURCES src/*)

# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////// DEPENDENCIES ////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

find_package(OpenGL REQUIRED)
find_package(SDL2 REQUIRED)

# /////////////////////////////////////////////////////////////////////////////
# ///////////////////////////////// INCLUDES //////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

include_directories(
    ${OPENGL_INCLUDE_DIR}
    ${SDL2_INCLUDE_DIRS}
    lib
    src
)

# /////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////// BUILD ///////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

set(EXECUTABLE_OUTPUT_PATH bin/${CMAKE_BUILD_TYPE})
add_executable(${PROJECT_NAME} ${MY_SOURCES})
target_link_libraries(
    ${PROJECT_NAME}
    ${OPENGL_LIBRARIES}
    ${SDL2_LIBRARIES}
)
